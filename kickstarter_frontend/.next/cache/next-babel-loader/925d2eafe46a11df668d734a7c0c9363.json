{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/components/CommentsForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { Component } from 'react';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'; // For fetch API\n\nvar CommentsForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentsForm, _React$Component);\n\n  function CommentsForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentsForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.getComments();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getComments\", function () {\n      fetch('http://localhost:3000/comments').then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return console.log(json);\n      })[\"catch\"](function (error) {\n        return console.error(erro);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitComments\", function (e) {\n      e.preventDefault();\n      console.log(_this.state.comments);\n      fetch('http://localhost:3000/comments', {\n        body: _JSON$stringify({\n          comment: _this.state.comment\n        }),\n        method: 'POST',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (createdComment) {\n        return createdComment.json();\n      }).then(function (jsonedComment) {\n        _this.setState({\n          comments: [jsonedComment].concat(_toConsumableArray(_this.state.comments))\n        });\n\n        console.log(comments);\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState({\n        comment: e.target.value\n      });\n    });\n\n    _this.state = {\n      comments: [],\n      comment: '',\n      commentOnUser: '',\n      username: ''\n    };\n    return _this;\n  }\n\n  _createClass(CommentsForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n        integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmitComments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Comments\"), __jsx(\"textarea\", {\n        value: this.state.comments,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.comments)))));\n    }\n  }]);\n\n  return CommentsForm;\n}(React.Component);\n\nexport { CommentsForm as default };","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/components/CommentsForm.js"],"names":["Layout","Link","Component","Head","fetch","CommentsForm","props","getComments","then","response","json","console","log","error","erro","e","preventDefault","state","comments","body","comment","method","headers","Accept","createdComment","jsonedComment","setState","target","value","commentOnUser","username","handleSubmitComments","handleChange","React"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAAwC;;IAEnBC,Y;;;;;AACpB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,sFAAMA,KAAN;;AADkB,wEAUC,YAAM;AACzB,YAAKC,WAAL;AACA,KAZkB;;AAAA,kEAcL,YAAM;AACnBH,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACEI,IADF,CACO,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADP,EAEEF,IAFF,CAEO,UAACE,IAAD;AAAA,eAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;AAAA,OAFP,WAGQ,UAACG,KAAD;AAAA,eAAWF,OAAO,CAACE,KAAR,CAAcC,IAAd,CAAX;AAAA,OAHR;AAIA,KAnBkB;;AAAA,2EAqBI,UAACC,CAAD,EAAO;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKK,KAAL,CAAWC,QAAvB;AACAd,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACvCe,QAAAA,IAAI,EAAM,gBAAe;AAAEC,UAAAA,OAAO,EAAE,MAAKH,KAAL,CAAWG;AAAtB,SAAf,CAD6B;AAEvCC,QAAAA,MAAM,EAAI,MAF6B;AAGvCC,QAAAA,OAAO,EAAG;AACTC,UAAAA,MAAM,EAAW,mCADR;AAET,0BAAiB;AAFR;AAH6B,OAAnC,CAAL,CAQEf,IARF,CAQO,UAACgB,cAAD,EAAoB;AACzB,eAAOA,cAAc,CAACd,IAAf,EAAP;AACA,OAVF,EAWEF,IAXF,CAWO,UAACiB,aAAD,EAAmB;AACxB,cAAKC,QAAL,CAAc;AACbR,UAAAA,QAAQ,GAAIO,aAAJ,4BAAsB,MAAKR,KAAL,CAAWC,QAAjC;AADK,SAAd;;AAGAP,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,OAhBF,WAiBQ,UAACL,KAAD;AAAA,eAAWF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAX;AAAA,OAjBR;AAkBA,KA1CkB;;AAAA,mEA4CJ,UAACE,CAAD,EAAO;AACrB,YAAKW,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAEL,CAAC,CAACY,MAAF,CAASC;AAApB,OAAd;AACA,KA9CkB;;AAElB,UAAKX,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAQ,EADJ;AAEZE,MAAAA,OAAO,EAAS,EAFJ;AAGZS,MAAAA,aAAa,EAAG,EAHJ;AAIZC,MAAAA,QAAQ,EAAQ;AAJJ,KAAb;AAFkB;AAQlB;;;;6BAwCQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC;AACC,QAAA,GAAG,EAAC,YADL;AAEC,QAAA,IAAI,EAAC,0EAFN;AAGC,QAAA,SAAS,EAAC,yEAHX;AAIC,QAAA,WAAW,EAAC,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD,EAUC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,QAAQ,EAAE,KAAKC,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC;AAAU,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,QAA5B;AAAsC,QAAA,QAAQ,EAAE,KAAKc,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,EAOC;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,KAAK,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CADD,EAUC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKf,KAAL,CAAWC,QAAhB,CADD,CAVD,CADD,CAVD,CADD;AA6BA;;;;EA/EwCe,KAAK,CAAC/B,S;;SAA3BG,Y","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { Component } from 'react';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'; // For fetch API\n\nexport default class CommentsForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcomments      : [],\n\t\t\tcomment       : '',\n\t\t\tcommentOnUser : '',\n\t\t\tusername      : ''\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.getComments();\n\t};\n\n\tgetComments = () => {\n\t\tfetch('http://localhost:3000/comments')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => console.log(json))\n\t\t\t.catch((error) => console.error(erro));\n\t};\n\n\thandleSubmitComments = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(this.state.comments);\n\t\tfetch('http://localhost:3000/comments', {\n\t\t\tbody    : JSON.stringify({ comment: this.state.comment }),\n\t\t\tmethod  : 'POST',\n\t\t\theaders : {\n\t\t\t\tAccept         : 'application/json, text/plain, */*',\n\t\t\t\t'Content-Type' : 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then((createdComment) => {\n\t\t\t\treturn createdComment.json();\n\t\t\t})\n\t\t\t.then((jsonedComment) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcomments : [jsonedComment, ...this.state.comments]\n\t\t\t\t});\n\t\t\t\tconsole.log(comments);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({ comment: e.target.value });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Head>\n\t\t\t\t\t{/* <title>Your public class</title>  */}\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\t\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n\t\t\t\t\t\tintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t/>\n\t\t\t\t</Head>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<form onSubmit={this.handleSubmitComments}>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<h6>Comments</h6>\n\t\t\t\t\t\t\t\t<textarea value={this.state.comments} onChange={this.handleChange} />\n\t\t\t\t\t\t\t\t{/* FOR USERNAME BLABLA */}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input className=\"btn btn-success\" type=\"submit\" value=\"Submit\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t\t<h1>{this.state.comments}</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}