{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Header from '../components/Header';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // class Yogaexercises extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tprops: p\n// \t\t\tposes : []\n// \t\t};\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<Layout>\n// \t\t\t\t<h1>Exercises for beginners</h1>\n// \t\t\t\t<p>List out the exercises here, pull from API</p>\n// \t\t\t\t{console.log(props.poses)}\n// \t\t\t\t<ul>\n// \t\t\t\t\t{props.poses.map((pose) => (\n// \t\t\t\t\t\t<li key={pose.id}>\n// \t\t\t\t\t\t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n// \t\t\t\t\t\t\t\t<a>{pose.name}</a>\n// \t\t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t\t<p>{pose.category}</p>\n// \t\t\t\t\t\t</li>\n// \t\t\t\t\t))}\n// \t\t\t\t</ul>\n// \t\t\t</Layout>\n// \t\t);\n// \t}\n// }\n\nvar Yogaexercises = function Yogaexercises(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Exercises for beginners\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"List out the exercises here, pull from API\"), console.log(props.poses), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.poses.map(function (pose) {\n    return __jsx(\"li\", {\n      key: pose.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(pose.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, pose.name)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, pose.category));\n  })));\n};\n\nYogaexercises.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/poses'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Yoga exercises data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            // poses : data.map((entry) => entry.pose)\n            poses: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Yogaexercises;","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js"],"names":["Layout","Link","fetch","Yogaexercises","props","console","log","poses","map","pose","id","name","category","getInitialProps","res","json","data","length"],"mappings":";;;;AAAA;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SACrB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFD,EAIEC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB,CAJF,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,WAChB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADD,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,QAAT,CAJD,CADgB;AAAA,GAAhB,CADF,CALD,CADqB;AAAA,CAAtB;;AAmBAT,aAAa,CAACU,eAAd,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbX,KAAK,CAAC,6BAAD,CADQ;;AAAA;AACzBY,UAAAA,GADyB;AAAA;AAAA,2CAEZA,GAAG,CAACC,IAAJ,EAFY;;AAAA;AAEzBC,UAAAA,IAFyB;AAG/BX,UAAAA,OAAO,CAACC,GAAR,+CAAmDU,IAAI,CAACC,MAAxD;AAH+B,2CAKxB;AACN;AACAV,YAAAA,KAAK,EAAGS;AAFF,WALwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAUA,eAAeb,aAAf","sourcesContent":["// import Header from '../components/Header';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\n// class Yogaexercises extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tprops: p\n// \t\t\tposes : []\n// \t\t};\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<Layout>\n// \t\t\t\t<h1>Exercises for beginners</h1>\n// \t\t\t\t<p>List out the exercises here, pull from API</p>\n// \t\t\t\t{console.log(props.poses)}\n// \t\t\t\t<ul>\n// \t\t\t\t\t{props.poses.map((pose) => (\n// \t\t\t\t\t\t<li key={pose.id}>\n// \t\t\t\t\t\t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n// \t\t\t\t\t\t\t\t<a>{pose.name}</a>\n// \t\t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t\t<p>{pose.category}</p>\n// \t\t\t\t\t\t</li>\n// \t\t\t\t\t))}\n// \t\t\t\t</ul>\n// \t\t\t</Layout>\n// \t\t);\n// \t}\n// }\n\nconst Yogaexercises = (props) => (\n\t<Layout>\n\t\t<h1>Exercises for beginners</h1>\n\t\t<p>List out the exercises here, pull from API</p>\n\t\t{/* {console.log(typeof props)} */}\n\t\t{console.log(props.poses)}\n\t\t<ul>\n\t\t\t{props.poses.map((pose) => (\n\t\t\t\t<li key={pose.id}>\n\t\t\t\t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n\t\t\t\t\t\t<a>{pose.name}</a>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<p>{pose.category}</p>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t</Layout>\n);\n\nYogaexercises.getInitialProps = async function() {\n\tconst res = await fetch('http://localhost:3000/poses');\n\tconst data = await res.json();\n\tconsole.log(`Yoga exercises data fetched. Count: ${data.length}`);\n\n\treturn {\n\t\t// poses : data.map((entry) => entry.pose)\n\t\tposes : data\n\t};\n};\nexport default Yogaexercises;\n"]},"metadata":{},"sourceType":"module"}