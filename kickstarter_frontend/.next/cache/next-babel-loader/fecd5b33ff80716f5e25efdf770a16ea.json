{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // import useSWR from 'swr';\n\nvar Mindbodyonline = function Mindbodyonline(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"MBO API\"), console.log(props), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nMindbodyonline.getInitialProps = function _callee() {\n  var url, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = 'https://api.mindbodyonline.com/public/v6/class/classschedules?limit=100&offset=0';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'POST',\n            // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors',\n            // no-cors, *cors, same-origin\n            cache: 'no-cache',\n            // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin',\n            // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n            },\n            redirect: 'follow',\n            // manual, *follow, error\n            referrerPolicy: 'no-referrer',\n            // no-referrer, *client\n            body: _JSON$stringify(data) // body data type must match \"Content-Type\" header\n\n          }));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 9:\n          data = _context.sent;\n          console.log(\"MBO data fetched successfully.\");\n          return _context.abrupt(\"return\", {\n            schedule: data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Mindbodyonline;","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js"],"names":["Layout","Link","fetch","Mindbodyonline","props","console","log","getInitialProps","url","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","data","res","response","json","schedule"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SACtB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFF,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADsB;AAAA,CAAvB;;AAWAD,cAAc,CAACI,eAAf,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,UAAAA,GAD0B,GACpB,kFADoB;AAAA;AAAA,2CAEdN,KAAK,CAACM,GAAD,EAAM;AAC5BC,YAAAA,MAAM,EAAW,MADW;AACH;AACzBC,YAAAA,IAAI,EAAa,MAFW;AAEH;AACzBC,YAAAA,KAAK,EAAY,UAHW;AAGC;AAC7BC,YAAAA,WAAW,EAAM,aAJW;AAII;AAChCC,YAAAA,OAAO,EAAU;AAChB,8BAAiB,kBADD,CAEhB;;AAFgB,aALW;AAS5BC,YAAAA,QAAQ,EAAS,QATW;AASD;AAC3BC,YAAAA,cAAc,EAAG,aAVW;AAUI;AAChCC,YAAAA,IAAI,EAAa,gBAAeC,IAAf,CAXW,CAWU;;AAXV,WAAN,CAFS;;AAAA;AAE1BC,UAAAA,GAF0B;AAAA;AAAA,2CAenBC,QAAQ,CAACC,IAAT,EAfmB;;AAAA;AAAA;;AAAA;AAgB1BH,UAAAA,IAhB0B;AAiBhCZ,UAAAA,OAAO,CAACC,GAAR;AAjBgC,2CAmBzB;AACNe,YAAAA,QAAQ,EAAGJ;AADL,WAnByB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;;AAwBA,eAAed,cAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n// import useSWR from 'swr';\n\nconst Mindbodyonline = (props) => (\n\t<Layout>\n\t\t<p>MBO API</p>\n\t\t{console.log(props)}\n\n\t\t<ul>{/* {props.schedule.map((class) => (\n\t\t\t\t\t<p>{schedule}</p>\n\t\t\t))} */}</ul>\n\t</Layout>\n);\n\nMindbodyonline.getInitialProps = async function() {\n\tconst url = 'https://api.mindbodyonline.com/public/v6/class/classschedules?limit=100&offset=0';\n\tconst res = await fetch(url, {\n\t\tmethod         : 'POST', // *GET, POST, PUT, DELETE, etc.\n\t\tmode           : 'cors', // no-cors, *cors, same-origin\n\t\tcache          : 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\tcredentials    : 'same-origin', // include, *same-origin, omit\n\t\theaders        : {\n\t\t\t'Content-Type' : 'application/json'\n\t\t\t// 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\tredirect       : 'follow', // manual, *follow, error\n\t\treferrerPolicy : 'no-referrer', // no-referrer, *client\n\t\tbody           : JSON.stringify(data) // body data type must match \"Content-Type\" header\n\t});\n\treturn await response.json(); // parses JSON response into native JavaScript objects);\n\tconst data = await res.json();\n\tconsole.log(`MBO data fetched successfully.`);\n\n\treturn {\n\t\tschedule : data\n\t};\n};\n\nexport default Mindbodyonline;\n"]},"metadata":{},"sourceType":"module"}