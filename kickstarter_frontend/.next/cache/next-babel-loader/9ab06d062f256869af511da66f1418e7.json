{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Header from '../components/Header';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // For fetch API \n\nimport { Component } from 'react';\n\nvar Yogaexercises =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Yogaexercises, _Component);\n\n  function Yogaexercises() {\n    _classCallCheck(this, Yogaexercises);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Yogaexercises).apply(this, arguments));\n  }\n\n  _createClass(Yogaexercises, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        title: \"Yoga Exercises\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Exercises for beginners\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"List out the exercises here, pull from API\"), console.log(typeof this.props), console.log(this.props.poses), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.rops.poses.map(function (pose) {\n        return __jsx(\"li\", {\n          key: pose.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/p/[id]\",\n          as: \"/p/\".concat(pose.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, pose.name)), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, pose.category));\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // state = {\n    // \tposes: null\n    // }\n    value: function getInitialProps() {\n      var res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3000/poses'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              console.log(\"Yoga exercises data fetched. Count: \".concat(data.length));\n              return _context.abrupt(\"return\", {\n                // poses : data.map((entry) => entry.pose)\n                poses: data\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Yogaexercises;\n}(Component);\n\nexport { Yogaexercises as default };","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js"],"names":["Layout","Link","fetch","Component","Yogaexercises","console","log","props","poses","rops","map","pose","id","name","category","res","json","data","length"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAAwC;;AACxC,SAASC,SAAT,QAA0B,OAA1B;;IAGqBC,a;;;;;;;;;;;;;6BAoBX;AACR,aACC,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFD,EAIEC,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKC,KAAxB,CAJF,EAKEF,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB,CALF,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKC,IAAL,CAAUD,KAAV,CAAgBE,GAAhB,CAAoB,UAACC,IAAD;AAAA,eACpB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,IAAT,CADD,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACG,QAAT,CAJD,CADoB;AAAA,OAApB,CADF,CAND,CADD;AAmBA;;;AAvCD;AACA;AACA;;;;;;;;+CAEmBZ,KAAK,CAAC,6BAAD,C;;;AAAjBa,cAAAA,G;;+CACaA,GAAG,CAACC,IAAJ,E;;;AAAbC,cAAAA,I;AACNZ,cAAAA,OAAO,CAACC,GAAR,+CAAmDW,IAAI,CAACC,MAAxD;+CAEO;AACN;AACAV,gBAAAA,KAAK,EAAGS;AAFF,e;;;;;;;;;;;;EATkCd,S;;SAAtBC,a","sourcesContent":["// import Header from '../components/Header';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch'; // For fetch API \nimport { Component } from 'react';\n\n\nexport default class Yogaexercises extends Component {\n\t// state = {\n\t// \tposes: null\n\t// }\n\tstatic async getInitialProps() {\n\t\tconst res = await fetch('http://localhost:3000/poses');\n\t\tconst data = await res.json();\n\t\tconsole.log(`Yoga exercises data fetched. Count: ${data.length}`);\n\t\n\t\treturn {\n\t\t\t// poses : data.map((entry) => entry.pose)\n\t\t\tposes : data\n\t\t};\n\t};\n\n\n\n\n\n\n\trender() {\n\t\treturn ( \n\t\t\t<Layout title=\"Yoga Exercises\">\n\t\t\t\t<h1>Exercises for beginners</h1>\n\t\t\t\t<p>List out the exercises here, pull from API</p>\n\n\t\t\t\t{console.log(typeof this.props)} \n\t\t\t\t{console.log(this.props.poses)}\n\t\t\t\t<ul>\n\t\t\t\t\t{this.rops.poses.map((pose) => (\n\t\t\t\t\t\t<li key={pose.id}>\n\t\t\t\t\t\t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n\t\t\t\t\t\t\t\t<a>{pose.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<p>{pose.category}</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}