{"ast":null,"code":"var _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/components/CommentsForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { Component } from 'react';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'; // For fetch API\n\nexport default class CommentsForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.getComments();\n    });\n\n    _defineProperty(this, \"toggleComments\", () => {\n      this.setState({\n        commentShow: true\n      });\n    });\n\n    _defineProperty(this, \"getComments\", () => {\n      fetch('http://localhost:3000/comments').then(response => response.json()).then(json => console.log(json)).catch(error => console.error(erro));\n    });\n\n    _defineProperty(this, \"handleSubmitComments\", e => {\n      e.preventDefault();\n      console.log(this.state.comments);\n      console.log(this.state.usernameWritingFor); // fetch('http://localhost:3000/comments', {\n      // \tbody    : JSON.stringify({ comment: this.state.comment }),\n      // \tmethod  : 'POST',\n      // \theaders : {\n      // \t\tAccept         : 'application/json, text/plain, */*',\n      // \t\t'Content-Type' : 'application/json'\n      // \t}\n      // })\n      // \t.then((createdComment) => {\n      // \t\treturn createdComment.json();\n      // \t})\n      // \t.then((jsonedComment) => {\n      // \t\tthis.setState({\n      // \t\t\tcomments : [jsonedComment, ...this.state.comments]\n      // \t\t});\n      // \t\tconsole.log(comments);\n      // \t})\n      // \t.catch((error) => console.log(error));\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        comment: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleUsernameOption\", e => {\n      this.setState({\n        usernameWritingFor: e.target.value\n      });\n    });\n\n    this.state = {\n      comments: [],\n      comment: '',\n      commentOnUser: '',\n      username: '',\n      usernameWritingFor: '',\n      commentShow: false\n    };\n  }\n\n  render() {\n    // console.log(comments[0].comment);\n    console.log('Client is ', this.props.client);\n    return __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"commentSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmitComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Comments\"), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      value: this.props.client,\n      onChange: this.handleUsernameOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"{this.props.client}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.client)), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), __jsx(\"textarea\", {\n      value: this.state.comment,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.toggleComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"newComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.comment)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/components/CommentsForm.js"],"names":["Layout","Link","Component","Head","fetch","CommentsForm","React","constructor","props","getComments","setState","commentShow","then","response","json","console","log","catch","error","erro","e","preventDefault","state","comments","usernameWritingFor","comment","target","value","commentOnUser","username","render","client","handleSubmitComments","handleUsernameOption","handleChange","toggleComments"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport { Component } from 'react';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'; // For fetch API\n\nexport default class CommentsForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcomments           : [],\n\t\t\tcomment            : '',\n\t\t\tcommentOnUser      : '',\n\t\t\tusername           : '',\n\t\t\tusernameWritingFor : '',\n\t\t\tcommentShow        : false\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.getComments();\n\t};\n\n\ttoggleComments = () => {\n\t\tthis.setState({\n\t\t\tcommentShow : true\n\t\t});\n\t};\n\n\tgetComments = () => {\n\t\tfetch('http://localhost:3000/comments')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => console.log(json))\n\t\t\t.catch((error) => console.error(erro));\n\t};\n\n\thandleSubmitComments = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(this.state.comments);\n\t\tconsole.log(this.state.usernameWritingFor);\n\t\t// fetch('http://localhost:3000/comments', {\n\t\t// \tbody    : JSON.stringify({ comment: this.state.comment }),\n\t\t// \tmethod  : 'POST',\n\t\t// \theaders : {\n\t\t// \t\tAccept         : 'application/json, text/plain, */*',\n\t\t// \t\t'Content-Type' : 'application/json'\n\t\t// \t}\n\t\t// })\n\t\t// \t.then((createdComment) => {\n\t\t// \t\treturn createdComment.json();\n\t\t// \t})\n\t\t// \t.then((jsonedComment) => {\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tcomments : [jsonedComment, ...this.state.comments]\n\t\t// \t\t});\n\t\t// \t\tconsole.log(comments);\n\t\t// \t})\n\t\t// \t.catch((error) => console.log(error));\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({ comment: e.target.value });\n\t};\n\n\thandleUsernameOption = (e) => {\n\t\tthis.setState({ usernameWritingFor: e.target.value });\n\t};\n\n\trender() {\n\t\t// console.log(comments[0].comment);\n\t\tconsole.log('Client is ', this.props.client);\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Head>\n\t\t\t\t\t{/* <title>Your public class</title>  */}\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\t\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n\t\t\t\t\t/>\n\t\t\t\t</Head>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"commentSection\">\n\t\t\t\t\t\t<form onSubmit={this.handleSubmitComments}>\n\t\t\t\t\t\t\t<h6>Comments</h6>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<select value={this.props.client} onChange={this.handleUsernameOption}>\n\t\t\t\t\t\t\t\t\t<option value=\"{this.props.client}\">{this.props.client}</option>\n\t\t\t\t\t\t\t\t\t{/* <option value=\"johnjohn\">johnjohn</option> */}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<textarea value={this.state.comment} onChange={this.handleChange} />\n\n\t\t\t\t\t\t\t\t{/* FOR USERNAME BLABLA */}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tvalue=\"Submit\"\n\t\t\t\t\t\t\t\tonClick={this.toggleComments}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t\t<div className=\"newComment\">{/* <h3>Work on your posture!</h3> */}</div>\n\t\t\t\t\t\t\t<h1>{this.state.comment}</h1>\n\t\t\t\t\t\t\t{/* <h1>newComment</h1> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}