{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Mindbodyonline = function Mindbodyonline(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"MBO API\"));\n};\n\nMindbodyonline.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.mindbodyonline.com/public/v6/class/classschedules?'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Yoga exercises data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            // poses : data.map((entry) => entry.pose)\n            poses: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // Need to use method get\n\n\nexport default Mindbodyonline;","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js"],"names":["Layout","Link","fetch","Mindbodyonline","props","getInitialProps","res","json","data","console","log","length","poses"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SACtB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,CADsB;AAAA,CAAvB;;AAMAD,cAAc,CAACE,eAAf,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdH,KAAK,CAAC,gEAAD,CADS;;AAAA;AAC1BI,UAAAA,GAD0B;AAAA;AAAA,2CAEbA,GAAG,CAACC,IAAJ,EAFa;;AAAA;AAE1BC,UAAAA,IAF0B;AAGhCC,UAAAA,OAAO,CAACC,GAAR,+CAAmDF,IAAI,CAACG,MAAxD;AAHgC,2CAKzB;AACN;AACAC,YAAAA,KAAK,EAAGJ;AAFF,WALyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC,C,CAWA;;;AAEA,eAAeL,cAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Mindbodyonline = (props) => (\n\t<Layout>\n\t\t<p>MBO API</p>\n\t</Layout>\n);\n\nMindbodyonline.getInitialProps = async function() {\n\tconst res = await fetch('https://api.mindbodyonline.com/public/v6/class/classschedules?');\n\tconst data = await res.json();\n\tconsole.log(`Yoga exercises data fetched. Count: ${data.length}`);\n\n\treturn {\n\t\t// poses : data.map((entry) => entry.pose)\n\t\tposes : data\n\t};\n};\n\n// Need to use method get\n\nexport default Mindbodyonline;\n"]},"metadata":{},"sourceType":"module"}