{"ast":null,"code":"var _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Header from '../components/Header';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // For fetch API\n\nimport Error from './_error';\nimport { Component } from 'react';\nexport default class Yogaexercises extends Component {\n  // state = {\n  // \tposes: null\n  // }\n  static async getInitialProps() {\n    const res = await fetch('http://localhost:3000/poses');\n    const statusCode = res.status > 200 ? res.status : false;\n    const data = await res.json();\n    console.log(`Yoga exercises data fetched. Count: ${data.length}`);\n    return {\n      // poses : data.map((entry) => entry.pose)\n      poses: data,\n      statusCode\n    };\n  }\n\n  render() {\n    const {\n      poses,\n      statusCode\n    } = this.props;\n\n    if (statusCode) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"Yoga Exercises\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"jsx-1847706654\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Exercises for beginners\"), __jsx(\"p\", {\n      className: \"jsx-1847706654\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"List out the exercises here, pull from API\"), console.log(poses), __jsx(\"ul\", {\n      className: \"jsx-1847706654\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, poses.map(pose => __jsx(\"li\", {\n      key: pose.id,\n      className: \"jsx-1847706654\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-1847706654\" + \" \" + \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: pose.image,\n      alt: \"...\",\n      className: \"jsx-1847706654\" + \" \" + \"card-img-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"jsx-1847706654\" + \" \" + \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"jsx-1847706654\" + \" \" + \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: `/p/${pose.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-1847706654\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, pose.name))), __jsx(\"p\", {\n      className: \"jsx-1847706654\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, pose.category)))))), __jsx(_JSXStyle, {\n      id: \"1847706654\",\n      __self: this\n    }, \".card.jsx-1847706654{width:18rem;border:orange solid 1px;}img.jsx-1847706654{width:12rem;}li.jsx-1847706654{list-style-type:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGFocmFuaXJhaGltYW4vUHJvamVjdHMveW9nYV9raWNrc3RhcnRlci9raWNrc3RhcnRlcl9mcm9udGVuZC9wYWdlcy95b2dhZXhlcmNpc2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdEZ0IsQUFHbUIsQUFLQSxBQUlTLFlBUkcsQUFLekIsU0FJQSxlQVJBIiwiZmlsZSI6Ii9Vc2Vycy9zaGFocmFuaXJhaGltYW4vUHJvamVjdHMveW9nYV9raWNrc3RhcnRlci9raWNrc3RhcnRlcl9mcm9udGVuZC9wYWdlcy95b2dhZXhlcmNpc2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcblxuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7IC8vIEZvciBmZXRjaCBBUElcbmltcG9ydCBFcnJvciBmcm9tICcuL19lcnJvcic7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFlvZ2FleGVyY2lzZXMgZXh0ZW5kcyBDb21wb25lbnQge1xuXHQvLyBzdGF0ZSA9IHtcblx0Ly8gXHRwb3NlczogbnVsbFxuXHQvLyB9XG5cdHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoKSB7XG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wb3NlcycpO1xuXHRcdGNvbnN0IHN0YXR1c0NvZGUgPSByZXMuc3RhdHVzID4gMjAwID8gcmVzLnN0YXR1cyA6IGZhbHNlO1xuXHRcdGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXHRcdGNvbnNvbGUubG9nKGBZb2dhIGV4ZXJjaXNlcyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdC8vIHBvc2VzIDogZGF0YS5tYXAoKGVudHJ5KSA9PiBlbnRyeS5wb3NlKVxuXHRcdFx0cG9zZXMgICAgICA6IGRhdGEsXG5cdFx0XHRzdGF0dXNDb2RlXG5cdFx0fTtcblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHRjb25zdCB7IHBvc2VzLCBzdGF0dXNDb2RlIH0gPSB0aGlzLnByb3BzO1xuXG5cdFx0aWYgKHN0YXR1c0NvZGUpIHtcblx0XHRcdHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz47XG5cdFx0fVxuXHRcdHJldHVybiAoXG5cdFx0XHQ8TGF5b3V0IHRpdGxlPVwiWW9nYSBFeGVyY2lzZXNcIj5cblx0XHRcdFx0PGgxPkV4ZXJjaXNlcyBmb3IgYmVnaW5uZXJzPC9oMT5cblx0XHRcdFx0PHA+TGlzdCBvdXQgdGhlIGV4ZXJjaXNlcyBoZXJlLCBwdWxsIGZyb20gQVBJPC9wPlxuXG5cdFx0XHRcdHsvKiB7Y29uc29sZS5sb2codHlwZW9mIHRoaXMucHJvcHMpfSAgKi99XG5cdFx0XHRcdHtjb25zb2xlLmxvZyhwb3Nlcyl9XG5cdFx0XHRcdDx1bD5cblx0XHRcdFx0XHR7cG9zZXMubWFwKChwb3NlKSA9PiAoXG5cdFx0XHRcdFx0XHQ8bGkga2V5PXtwb3NlLmlkfT5cblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XG5cdFx0XHRcdFx0XHRcdFx0PGltZyBzcmM9e3Bvc2UuaW1hZ2V9IGNsYXNzTmFtZT1cImNhcmQtaW1nLXRvcFwiIGFsdD1cIi4uLlwiIC8+XG5cdFx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIj5cblx0XHRcdFx0XHRcdFx0XHRcdDxwIGNsYXNzTmFtZT1cImNhcmQtdGV4dFwiPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtwb3NlLmlkfWB9PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxhPntwb3NlLm5hbWV9PC9hPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L0xpbms+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L3A+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8cD57cG9zZS5jYXRlZ29yeX08L3A+XG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PC9saT5cblx0XHRcdFx0XHQpKX1cblx0XHRcdFx0PC91bD5cblxuXHRcdFx0XHQ8c3R5bGUganN4PntgXG5cdFx0XHRcdFx0LmNhcmQge1xuXHRcdFx0XHRcdFx0d2lkdGg6IDE4cmVtO1xuXHRcdFx0XHRcdFx0Ym9yZGVyOiBvcmFuZ2Ugc29saWQgMXB4O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGltZyB7XG5cdFx0XHRcdFx0XHR3aWR0aDogMTJyZW07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0bGkge1xuXHRcdFx0XHRcdFx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0YH08L3N0eWxlPlxuXHRcdFx0PC9MYXlvdXQ+XG5cdFx0KTtcblx0fVxufVxuIl19 */\\n/*@ sourceURL=/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/yogaexercises.js"],"names":["Layout","Link","fetch","Error","Component","Yogaexercises","getInitialProps","res","statusCode","status","data","json","console","log","length","poses","render","props","map","pose","id","image","name","category"],"mappings":";;;;AAAA;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAAwC;;AACxC,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,eAAe,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpD;AACA;AACA;AACA,eAAaE,eAAb,GAA+B;AAC9B,UAAMC,GAAG,GAAG,MAAML,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMM,UAAU,GAAGD,GAAG,CAACE,MAAJ,GAAa,GAAb,GAAmBF,GAAG,CAACE,MAAvB,GAAgC,KAAnD;AACA,UAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,uCAAsCH,IAAI,CAACI,MAAO,EAA/D;AAEA,WAAO;AACN;AACAC,MAAAA,KAAK,EAAQL,IAFP;AAGNF,MAAAA;AAHM,KAAP;AAKA;;AAEDQ,EAAAA,MAAM,GAAG;AACR,UAAM;AAAED,MAAAA,KAAF;AAASP,MAAAA;AAAT,QAAwB,KAAKS,KAAnC;;AAEA,QAAIT,UAAJ,EAAgB;AACf,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AACD,WACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFD,EAKEI,OAAO,CAACC,GAAR,CAAYE,KAAZ,CALF,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,KAAK,CAACG,GAAN,CAAWC,IAAD,IACV;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA,0CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,KAAf;AAA+C,MAAA,GAAG,EAAC,KAAnD;AAAA,0CAAgC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA,0CAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA,0CAAa,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,EAAG,MAAKF,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACG,IAAT,CADD,CADD,CADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACI,QAAT,CAND,CAFD,CADD,CADA,CADF,CAND;AAAA;AAAA;AAAA,y2GADD;AAyCA;;AAhEmD","sourcesContent":["// import Header from '../components/Header';\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch'; // For fetch API\nimport Error from './_error';\nimport { Component } from 'react';\n\nexport default class Yogaexercises extends Component {\n\t// state = {\n\t// \tposes: null\n\t// }\n\tstatic async getInitialProps() {\n\t\tconst res = await fetch('http://localhost:3000/poses');\n\t\tconst statusCode = res.status > 200 ? res.status : false;\n\t\tconst data = await res.json();\n\t\tconsole.log(`Yoga exercises data fetched. Count: ${data.length}`);\n\n\t\treturn {\n\t\t\t// poses : data.map((entry) => entry.pose)\n\t\t\tposes      : data,\n\t\t\tstatusCode\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { poses, statusCode } = this.props;\n\n\t\tif (statusCode) {\n\t\t\treturn <Error statusCode={statusCode} />;\n\t\t}\n\t\treturn (\n\t\t\t<Layout title=\"Yoga Exercises\">\n\t\t\t\t<h1>Exercises for beginners</h1>\n\t\t\t\t<p>List out the exercises here, pull from API</p>\n\n\t\t\t\t{/* {console.log(typeof this.props)}  */}\n\t\t\t\t{console.log(poses)}\n\t\t\t\t<ul>\n\t\t\t\t\t{poses.map((pose) => (\n\t\t\t\t\t\t<li key={pose.id}>\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<img src={pose.image} className=\"card-img-top\" alt=\"...\" />\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t<a>{pose.name}</a>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>{pose.category}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\n\t\t\t\t<style jsx>{`\n\t\t\t\t\t.card {\n\t\t\t\t\t\twidth: 18rem;\n\t\t\t\t\t\tborder: orange solid 1px;\n\t\t\t\t\t}\n\n\t\t\t\t\timg {\n\t\t\t\t\t\twidth: 12rem;\n\t\t\t\t\t}\n\n\t\t\t\t\tli {\n\t\t\t\t\t\tlist-style-type: none;\n\t\t\t\t\t}\n\t\t\t\t`}</style>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}