{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Error from './_error';\nimport { Component } from 'react'; // import useSWR from 'swr';\n\nvar Mindbodyonline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mindbodyonline, _Component);\n\n  function Mindbodyonline(props) {\n    var _this;\n\n    _classCallCheck(this, Mindbodyonline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mindbodyonline).call(this, props));\n    _this.state = {\n      schedule: ''\n    };\n    return _this;\n  } // To fetch\n\n\n  _createClass(Mindbodyonline, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          schedule = _this$props.schedule,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode) {\n        return __jsx(Error, {\n          statusCode: statusCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      return __jsx(Layout, {\n        title: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"MBO API\"), console.log(schedule), console.log(schedule.Classes), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" Conditionals\"), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"If active is true, display.\"), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Display only when level is 1/2, show vacancy?\")), __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Class A\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Class B\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res, statusCode, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3000/classes'));\n\n            case 2:\n              res = _context.sent;\n              statusCode = res.status > 200 ? res.status : false;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              data = _context.sent;\n              console.log(\"Class schedule fetch.\");\n              return _context.abrupt(\"return\", {\n                schedule: data,\n                statusCode: statusCode\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Mindbodyonline;\n}(Component); // {poses.map((pose) => (\n// \t<li key={pose.id}>\n// \t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n// \t\t\t<a>{pose.name}</a>\n// \t\t</Link>\n// \t\t<p>{pose.category}</p>\n// \t</li>\n// ))\n\n\nexport { Mindbodyonline as default };","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js"],"names":["Layout","Link","fetch","Error","Component","Mindbodyonline","props","state","schedule","statusCode","console","log","Classes","res","status","json","data"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;IAEqBC,c;;;;;AACpB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAG;AADC,KAAb;AAFkB;AAKlB,G,CAED;;;;;6BAaS;AAAA,wBACyB,KAAKF,KAD9B;AAAA,UACAE,QADA,eACAA,QADA;AAAA,UACUC,UADV,eACUA,UADV;;AAGR,UAAIA,UAAJ,EAAgB;AACf,eAAO,MAAC,KAAD;AAAO,UAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,aACC,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEEC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAFF,EAGEE,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,OAArB,CAHF,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhBD,EAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFD,CAjBD,EAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtBD,EAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBD,EA2BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA3BD,CADD;AAsCA;;;;;;;;;;+CAxDkBV,KAAK,CAAC,+BAAD,C;;;AAAjBW,cAAAA,G;AACAJ,cAAAA,U,GAAaI,GAAG,CAACC,MAAJ,GAAa,GAAb,GAAmBD,GAAG,CAACC,MAAvB,GAAgC,K;;+CAChCD,GAAG,CAACE,IAAJ,E;;;AAAbC,cAAAA,I;AACNN,cAAAA,OAAO,CAACC,GAAR;+CAEO;AACNH,gBAAAA,QAAQ,EAAKQ,IADP;AAENP,gBAAAA,UAAU,EAAVA;AAFM,e;;;;;;;;;;;;EAfmCL,S,GAqE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SA5EqBC,c","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Error from './_error';\n\nimport { Component } from 'react';\n\n// import useSWR from 'swr';\n\nexport default class Mindbodyonline extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tschedule : ''\n\t\t};\n\t}\n\n\t// To fetch\n\tstatic async getInitialProps() {\n\t\tconst res = await fetch('http://localhost:3000/classes');\n\t\tconst statusCode = res.status > 200 ? res.status : false;\n\t\tconst data = await res.json();\n\t\tconsole.log(`Class schedule fetch.`);\n\n\t\treturn {\n\t\t\tschedule   : data,\n\t\t\tstatusCode\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { schedule, statusCode } = this.props;\n\n\t\tif (statusCode) {\n\t\t\treturn <Error statusCode={statusCode} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<Layout title=\"\">\n\t\t\t\t<p>MBO API</p>\n\t\t\t\t{console.log(schedule)}\n\t\t\t\t{console.log(schedule.Classes)}\n\n\t\t\t\t{/* {schedule.Classes.map((class) => (\n\t\t\t\t\t\t<li key={class.id}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p>{class.ClassId}</p>\n\t\t\n\t\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))} */}\n\n\t\t\t\t{/* {console.log(schedule[1].ClassDescription)} */}\n\t\t\t\t<p> Conditionals</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>If active is true, display.</li>\n\t\t\t\t\t<li>Display only when level is 1/2, show vacancy?</li>\n\t\t\t\t</ul>\n\t\t\t\t{/* <Link href=\"https://clients.mindbodyonline.com/LoginLaunch?studioid=590475\"> */}\n\t\t\t\t<a>Class A</a>\n\t\t\t\t{/* </Link> */}\n\t\t\t\t<br />\n\n\t\t\t\t{/* <Link href=\"https://clients.mindbodyonline.com/LoginLaunch?studioid=590475\"> */}\n\t\t\t\t<a>Class B</a>\n\t\t\t\t{/* </Link> */}\n\n\t\t\t\t{/* <p>{schedule.ClassDescription}</p> */}\n\t\t\t\t{/* <p>{schedule.ClassDescription}</p> */}\n\t\t\t\t{/* {schedule.ClassDescription.map((class) => (\n\t\t\t\t\t{class.Name}\n\t\t\t\t))} */}\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\n// {poses.map((pose) => (\n// \t<li key={pose.id}>\n// \t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n// \t\t\t<a>{pose.name}</a>\n// \t\t</Link>\n// \t\t<p>{pose.category}</p>\n// \t</li>\n// ))\n"]},"metadata":{},"sourceType":"module"}