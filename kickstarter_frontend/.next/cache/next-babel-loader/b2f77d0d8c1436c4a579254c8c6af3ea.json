{"ast":null,"code":"var _jsxFileName = \"/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Error from './_error';\nimport Head from 'next/head';\nimport { Component } from 'react'; // import useSWR from 'swr';\n\nexport default class Mindbodyonline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      schedule: ''\n    };\n  } // To fetch\n\n\n  static async getInitialProps() {\n    const res = await fetch('http://localhost:3000/classes');\n    const statusCode = res.status > 200 ? res.status : false;\n    const data = await res.json();\n    console.log(`Class schedule fetch.`);\n    return {\n      schedule: data,\n      statusCode\n    };\n  }\n\n  render() {\n    const {\n      schedule,\n      statusCode\n    } = this.props;\n\n    if (statusCode) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Class Schedule\"), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossorigin: \"anonymous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"MBO API\"), console.log(schedule.Classes), schedule.Classes.map(x => __jsx(\"li\", {\n      key: x.ClassScheduleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Studio: \", x.Location.Name), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Class Description: \", x.ClassDescription.Description), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Start-date: \", x.StartDateTime), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"End date: \", x.EndDateTime), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Availability: \", x.IsAvailable))), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Conditionals\"), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"If active is true, display.\"), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Display only when level is 1/2, show vacancy?\")), __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Class A\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Class B\"));\n  }\n\n} // {poses.map((pose) => (\n// \t<li key={pose.id}>\n// \t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n// \t\t\t<a>{pose.name}</a>\n// \t\t</Link>\n// \t\t<p>{pose.category}</p>\n// \t</li>\n// ))","map":{"version":3,"sources":["/Users/shahranirahiman/Projects/yoga_kickstarter/kickstarter_frontend/pages/mindbodyonline.js"],"names":["Layout","Link","fetch","Error","Head","Component","Mindbodyonline","constructor","props","state","schedule","getInitialProps","res","statusCode","status","data","json","console","log","render","Classes","map","x","ClassScheduleId","Location","Name","ClassDescription","Description","StartDateTime","EndDateTime","IsAvailable"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Error from './_error';\nimport Head from 'next/head';\nimport { Component } from 'react';\n\n// import useSWR from 'swr';\n\nexport default class Mindbodyonline extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tschedule : ''\n\t\t};\n\t}\n\n\t// To fetch\n\tstatic async getInitialProps() {\n\t\tconst res = await fetch('http://localhost:3000/classes');\n\t\tconst statusCode = res.status > 200 ? res.status : false;\n\t\tconst data = await res.json();\n\t\tconsole.log(`Class schedule fetch.`);\n\n\t\treturn {\n\t\t\tschedule   : data,\n\t\t\tstatusCode\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { schedule, statusCode } = this.props;\n\n\t\tif (statusCode) {\n\t\t\treturn <Error statusCode={statusCode} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<Layout title=\"\">\n\t\t\t\t<Head>\n\t\t\t\t\t<title>Class Schedule</title>\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\t\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n\t\t\t\t\t\tintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t/>\n\t\t\t\t</Head>\n\n\n\n\n\t\t\t\t<p>MBO API</p>\n\t\t\t\t{/* {console.log(schedule)} */}\n\t\t\t\t{console.log(schedule.Classes)}\n\n\t\t\t\t{schedule.Classes.map((x) => (\n\t\t\t\t\t<li key={x.ClassScheduleId}>\n\t\t\t\t\t\t<p>Studio: {x.Location.Name}</p>\n\t\t\t\t\t\t{/* <p>Studio: {x.Resource[Name]}</p> */}\n\t\t\t\t\t\t<p>Class Description: {x.ClassDescription.Description}</p>\n\t\t\t\t\t\t<p>Start-date: {x.StartDateTime}</p>\n\t\t\t\t\t\t<p>End date: {x.EndDateTime}</p>\n\t\t\t\t\t\t<p>Availability: {x.IsAvailable}</p>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\n\t\t\t\t{/* {console.log(schedule[1].ClassDescription)} */}\n\t\t\t\t<p> Conditionals</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>If active is true, display.</li>\n\t\t\t\t\t<li>Display only when level is 1/2, show vacancy?</li>\n\t\t\t\t</ul>\n\t\t\t\t{/* <Link href=\"https://clients.mindbodyonline.com/LoginLaunch?studioid=590475\"> */}\n\t\t\t\t<a>Class A</a>\n\t\t\t\t{/* </Link> */}\n\t\t\t\t<br />\n\n\t\t\t\t{/* <Link href=\"https://clients.mindbodyonline.com/LoginLaunch?studioid=590475\"> */}\n\t\t\t\t<a>Class B</a>\n\t\t\t\t{/* </Link> */}\n\n\t\t\t\t{/* <p>{schedule.ClassDescription}</p> */}\n\t\t\t\t{/* <p>{schedule.ClassDescription}</p> */}\n\t\t\t\t{/* {schedule.ClassDescription.map((class) => (\n\t\t\t\t\t{class.Name}\n\t\t\t\t))} */}\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\n// {poses.map((pose) => (\n// \t<li key={pose.id}>\n// \t\t<Link href=\"/p/[id]\" as={`/p/${pose.id}`}>\n// \t\t\t<a>{pose.name}</a>\n// \t\t</Link>\n// \t\t<p>{pose.category}</p>\n// \t</li>\n// ))\n"]},"metadata":{},"sourceType":"module"}